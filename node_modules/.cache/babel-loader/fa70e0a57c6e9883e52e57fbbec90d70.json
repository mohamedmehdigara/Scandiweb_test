{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p-c\\\\Downloads\\\\Github\\\\Scandiweb_test\\\\src\\\\components\\\\CurrencyChanger\\\\CurrencyChanger.js\";\nimport React from 'react';\nimport { Currencies } from '../queries';\nimport { useQuery } from '@apollo/client';\nimport { currencyStore } from '../../redux/currencyStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction injectCurrencies(Component) {\n  var _s = $RefreshSig$();\n\n  const InjectedCurrencies = function () {\n    _s();\n\n    const currency = useQuery(Currencies);\n    return /*#__PURE__*/_jsxDEV(Component, {\n      currency: currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(InjectedCurrencies, \"5l6fopO2+0RfbhJbATsd6QQqRsY=\", false, function () {\n    return [useQuery];\n  });\n\n  return InjectedCurrencies;\n}\n\nclass CustomSelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = e => {\n      if (!e.target.classList.contains('custom-select-option') && !e.target.classList.contains('selected-text')) {\n        this.setState({\n          showOptionList: false\n        });\n      }\n    };\n\n    this.handleListDisplay = () => {\n      this.setState({\n        showOptionList: !this.state.showOptionList\n      });\n    };\n\n    this.handleOptionClick = e => {\n      const currency = e.target.getAttribute('data-name');\n      const currrentCurrencyObject = this.state.currencyList.filter(item => item.label === currency)[0];\n      currencyStore.dispatch({\n        type: currrentCurrencyObject.symbol\n      });\n      this.setState({\n        SelectText: currrentCurrencyObject.symbol,\n        showOptionList: false\n      });\n    };\n\n    this.state = {\n      SelectText: '$',\n      showOptionList: false,\n      currencyList: []\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currency.data !== prevProps.currency.data) {\n      const currencyList = this.props.currency.data.currencies;\n      this.setState({\n        currencyList: currencyList\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      currencyList,\n      showOptionList,\n      SelectText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: showOptionList ? 'selected-text active' : 'selected-text',\n        onClick: this.handleListDisplay,\n        children: SelectText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), showOptionList && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"select-options\",\n        children: currencyList.length ? currencyList.map(currency => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"custom-select-option\",\n            \"data-name\": currency.label,\n            onClick: this.handleOptionClick,\n            children: [\" \", currency.label]\n          }, currency.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = injectCurrencies(CustomSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Currencies","useQuery","currencyStore","injectCurrencies","Component","InjectedCurrencies","currency","CustomSelect","PureComponent","constructor","props","handleClickOutside","e","target","classList","contains","setState","showOptionList","handleListDisplay","state","handleOptionClick","getAttribute","currrentCurrencyObject","currencyList","filter","item","label","dispatch","type","symbol","SelectText","componentDidMount","document","addEventListener","componentDidUpdate","prevProps","data","currencies","componentWillUnmount","removeEventListener","render","length","map"],"sources":["C:/Users/p-c/Downloads/Github/Scandiweb_test/src/components/CurrencyChanger/CurrencyChanger.js"],"sourcesContent":["import React from 'react'\r\nimport { Currencies } from '../queries'\r\nimport {\r\n  useQuery\r\n} from '@apollo/client'\r\nimport { currencyStore} from '../../redux/currencyStore'\r\n\r\nfunction injectCurrencies (Component) {\r\n  const InjectedCurrencies = function () {\r\n    const currency = useQuery(Currencies)    \r\n    return <Component currency={currency} />\r\n  }\r\n  return InjectedCurrencies\r\n}\r\n\r\nclass CustomSelect extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      SelectText: '$',\r\n      showOptionList: false,\r\n      currencyList: []\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    document.addEventListener('mousedown', this.handleClickOutside)\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {    \r\n    if (this.props.currency.data !== prevProps.currency.data) {\r\n      const currencyList = this.props.currency.data.currencies;\r\n      this.setState({ currencyList: currencyList })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    document.removeEventListener('mousedown', this.handleClickOutside)\r\n  }\r\n\r\n  handleClickOutside = e => {\r\n    if (\r\n      !e.target.classList.contains('custom-select-option') &&\r\n      !e.target.classList.contains('selected-text')\r\n    ) {\r\n      this.setState({\r\n        showOptionList: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleListDisplay = () => {\r\n    this.setState({ showOptionList: !this.state.showOptionList })\r\n  };\r\n\r\n  handleOptionClick = e => {\r\n    const currency = e.target.getAttribute('data-name')\r\n    const currrentCurrencyObject = this.state.currencyList.filter((item)=>  item.label === currency)[0]    \r\n    currencyStore.dispatch({ type: currrentCurrencyObject.symbol })\r\n    this.setState({\r\n      SelectText: currrentCurrencyObject.symbol, showOptionList: false\r\n    })\r\n  };\r\n  \r\n\r\n  render () {\r\n    const { currencyList, showOptionList, SelectText } = this.state\r\n    return (\r\n      <div className=\"custom-select-container\">\r\n        <div\r\n          className={showOptionList ? 'selected-text active' : 'selected-text'}\r\n          onClick={this.handleListDisplay}\r\n        >\r\n        {SelectText}\r\n        </div>\r\n        {showOptionList && (\r\n          <ul className=\"select-options\">\r\n            {currencyList.length\r\n              ? currencyList.map(currency => {\r\n                return (\r\n                <li\r\n                  className=\"custom-select-option\"\r\n                  data-name={currency.label}\r\n                  key={currency.label}\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                 {} {currency.label}\r\n                </li>\r\n                )\r\n              })\r\n              : null}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectCurrencies(CustomSelect)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}